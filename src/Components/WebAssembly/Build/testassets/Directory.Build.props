<Project>
    <Import Project="Before.Directory.Build.props" Condition="Exists('Before.Directory.Build.props')" />

    <!-- Test Placeholder -->

    <PropertyGroup>
      <RepoRoot Condition="'$(RepoRoot)' ==''">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), global.json))\</RepoRoot>
      <ComponentsRoot>$(RepoRoot)src\Components\</ComponentsRoot>
      <BlazorBuildRoot>$(ComponentsRoot)WebAssembly\Build\src\</BlazorBuildRoot>
      <ReferenceBlazorBuildFromSourceProps Condition="'$(IsHelixJob)' != 'true'">$(BlazorBuildRoot)ReferenceBlazorBuildFromSource.props</ReferenceBlazorBuildFromSourceProps>
      <ReferenceBlazorBuildFromSourceProps Condition="'$(ReferenceBlazorBuildFromSourceProps)' == ''">$(MSBuildThisFileDirectory)\..\src\ReferenceBlazorBuildFromSource.props</ReferenceBlazorBuildFromSourceProps>


      <!-- Workaround for https://github.com/dotnet/aspnetcore/issues/17308 -->
      <DefaultNetCoreTargetFramework>netcoreapp3.1</DefaultNetCoreTargetFramework>

      <EnableSourceLink>false</EnableSourceLink>
      <DeterministicSourcePaths>false</DeterministicSourcePaths>
    </PropertyGroup>

    <Import Project="$(RepoRoot)eng\Versions.props" Condition="'$(HELIX_WORKITEM_ROOT)' == ''" />
    <Import Project="$(MSBuildThisFileDirectory)Versions.props" Condition="Exists('$(MSBuildThisFileDirectory)Versions.props')" />

    <ItemGroup>
      <!-- Use the sample compiler \ SDK that the rest of our build uses-->
      <PackageReference Include="Microsoft.Net.Compilers.Toolset"
        Version="3.6.0-4.final"
        PrivateAssets="all"
        IsImplicitlyDefined="true" />
    </ItemGroup>

    <Import Project="$(RepoRoot)\src\Razor\Microsoft.NET.Sdk.Razor\src\build\netstandard2.0\Microsoft.NET.Sdk.Razor.props"/>
</Project>
